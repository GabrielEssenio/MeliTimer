{"version":3,"sources":["components/DialPad.jsx","components/Header.jsx","sounds/start.mp3","sounds/pause.mp3","sounds/impostor-win.mp3","App.jsx","reportWebVitals.js","index.js"],"names":["DialPad","numbers","i","push","type","className","id","Component","Header","App","soundPlay","bind","src","Howl","play","Howler","volume","onChange","this","pause","onClick","start","stop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAmBeA,E,4JAhBb,WAGE,IAFA,IAAMC,EAAU,GAEPC,EAAI,EAAGA,EADJ,GACaA,GAAK,EAC5BD,EAAQE,KAAK,wBAAQC,KAAK,SAAb,SAAkCF,GAANA,IAE3C,OACE,sBAAKG,UAAU,mBAAf,UACGJ,EACD,wBAAQG,KAAK,SAAmBC,UAAU,mBAAmBC,GAAG,MAAhE,cAA0B,OAC1B,wBAAQF,KAAK,SAAb,cAA4B,GAC5B,wBAAQA,KAAK,SAAqBE,GAAG,QAArC,cAA0B,gB,GAZZC,aCePC,E,4JAdb,WACE,OACE,iCACE,0CAEE,sBAAMH,UAAU,kBAAhB,uBACC,IAHH,oB,GAJaE,aCFN,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,yCC0E1BE,E,kDA1Db,aAAe,IAAD,8BACZ,gBACKC,UAAY,EAAKA,UAAUC,KAAf,gBAFL,E,6CAKd,SAAUC,GACM,IAAIC,OAAK,CACrBD,IAAK,CAACA,KAEFE,S,oBAGR,WAGE,OADAC,SAAOC,OADQ,IAGb,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,QAAhB,qBAIF,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,SAGJ,sBAAKA,UAAU,cAAf,UACE,wBACED,KAAK,SACLC,UAAU,oBACVY,SAAWC,KAAKR,UAAUS,GAH5B,SAKG,MAEH,wBACEf,KAAK,SACLC,UAAU,qBACVe,QAAUF,KAAKR,UAAUW,GAH3B,SAKG,MAGH,wBACEjB,KAAK,SACLC,UAAU,mBACVe,QAAUF,KAAKR,UAAUY,GAH3B,SAKG,gB,GAlDKf,aCHHgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41acf89f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass DialPad extends Component {\n  render() {\n    const numbers = [];\n    const MAX = 10;\n    for (let i = 1; i < MAX; i += 1) {\n      numbers.push(<button type=\"button\" key={ i }>{ i }</button>);\n    }\n    return (\n      <div className=\"dial-pad-buttons\">\n        {numbers}\n        <button type=\"button\" key=\"del\" className=\"fas fa-backspace\" id=\"del\"> </button>\n        <button type=\"button\" key={ 0 }>0</button>\n        <button type=\"button\" key=\"clear\" id=\"clear\">C</button>\n      </div>);\n  }\n}\n\nexport default DialPad;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1>\n          There is\n          <span className=\"title-spotlight\"> 1 Timer </span>\n          {' '}\n          among us\n        </h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/start.c8149644.mp3\";","export default __webpack_public_path__ + \"static/media/pause.895d2f7f.mp3\";","export default __webpack_public_path__ + \"static/media/impostor-win.a3cf6271.mp3\";","import React, { Component } from 'react';\nimport { Howl, Howler } from 'howler';\nimport './App.css';\nimport DialPad from './components/DialPad';\nimport Header from './components/Header';\nimport start from './sounds/start.mp3';\nimport pause from './sounds/pause.mp3';\nimport stop from './sounds/impostor-win.mp3';\n\n// const sfx = [\n//   { label: 'start', sound: start },\n//   { label: 'pause', sound: pause },\n//   { label: 'stop', sound: stop },\n// ];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.soundPlay = this.soundPlay.bind(this);\n  }\n\n  soundPlay(src) {\n    const sound = new Howl({\n      src: [src],\n    });\n    sound.play();\n  }\n\n  render() {\n    const VOLUME = 0.1;\n    Howler.volume(VOLUME);\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"main-container\">\n          <div className=\"timer-container\">\n            <span className=\"timer\">\n              05:30\n            </span>\n          </div>\n          <div className=\"dial-pad-container\">\n            <DialPad />\n          </div>\n        </div>\n        <div className=\"command-btn\">\n          <button\n            type=\"button\"\n            className=\"start fas fa-play\"\n            onChange={ this.soundPlay(pause) }\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            className=\"pause fas fa-pause\"\n            onClick={ this.soundPlay(start) }\n          >\n            {' '}\n\n          </button>\n          <button\n            type=\"button\"\n            className=\"stop fas fa-stop\"\n            onClick={ this.soundPlay(stop) }\n          >\n            {' '}\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}